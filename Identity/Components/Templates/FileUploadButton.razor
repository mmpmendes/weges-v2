@inject IJSRuntime JSRuntime

<div class="mb-3">
    <InputFile id="fileInput" onchange="HandleFileSelected" hidden="true" />

    <MudButton Color="Color" Variant="Variant.Filled" OnClick="SelectFile" EndIcon="@Icons.Material.Filled.UploadFile" Disabled="@Disabled">
        @Label
    </MudButton>
</div>

<script>
    function triggerFileInputClick(inputFileId) {
    document.getElementById(inputFileId).click();
    }
</script>

@code {



    [Parameter]
    public IBrowserFile? SelectedFile { get; set; }
    [Parameter]
    public EventCallback<IBrowserFile?> SelectedFileChanged { get; set; }
    [Parameter]
    public bool IsFileSelected { get; set; } = false;
    [Parameter]
    public string Label { get; set; } = "Carregar Ficheiro";
    [Parameter]
    public MudBlazor.Color Color { get; set; } = Color.Primary;
    [Parameter]
    public bool Disabled { get; set; } = false;

    private int maxAllowedFiles = 1;



    private async Task HandleFileSelected(InputFileChangeEventArgs e)
    {
        if (e.File is not null)
        {
            SelectedFile = e.GetMultipleFiles(maxAllowedFiles)?.FirstOrDefault();
            IsFileSelected = true;
            await SelectedFileChanged.InvokeAsync(SelectedFile);
        }

    }
    private async Task SelectFile(MouseEventArgs e)
    {
        // Use JavaScript interop to trigger the click event on the hidden InputFile element
        await JSRuntime.InvokeVoidAsync("triggerFileInputClick", "fileInput");
    }
}