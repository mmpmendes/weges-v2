name: weges-web-image

on:
  push:
    branches: [ "main" ]
    paths: [ "Identity/**" ]
  pull_request:
    branches: [ "main" ]
    paths: [ "Identity/**" ]

jobs:

  build:
    
    runs-on: home-runner
    permissions:
      contents: write
      packages: write
      actions: read
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
          fetch-depth: 0
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Set up Node.js (for versioning tool)
      uses: actions/setup-node@v4

    - name: Install Standard Version
      run: npm install -g standard-version
      
    - name: Determine New Version
      run: |
        git config --global user.email "github-actions@github.com"
        git config --global user.name "GitHub Actions"

        # Run standard-version to generate the next version
        standard-version --no-verify --commit-all

        # Extract the new version from package.json or CHANGELOG.md
        VERSION=$(git describe --tags --abbrev=0)

        if [ -z "$VERSION" ]; then
          VERSION="v1.0.0"
        fi

        echo "VERSION=web-$VERSION" >> $GITHUB_ENV
        echo "New version: $VERSION"

        # Push changes (version bump and tags)
        git push --follow-tags origin main
        
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
    - name: Build the Docker image
      run: docker build -t ghcr.io/mmpmendes/weges-v2/weges-app:$VERSION -f Identity/Dockerfile . 

    - name: Tag the Docker image
      run: docker tag ghcr.io/mmpmendes/weges-v2/weges-app:$VERSION ghcr.io/mmpmendes/weges-v2/weges-app:latest

      
    - name: Push Docker Image to Github
      run: |
        docker push ghcr.io/mmpmendes/weges-v2/weges-app:$VERSION
        docker push ghcr.io/mmpmendes/weges-v2/weges-app:latest
    
    - name: Remove running container
      run: |
        docker rm -f weges-app

    - name: Deploy WebApp
      env: # Or as an environment variable
        web_address: ${{ secrets.DEV_PAGE_ADDRESS }}
        connString: ${{ secrets.CONNECTIONSTRING }}
        gClientId: ${{ secrets.GOOGLE_CLIENTID }}
        gClientSecret: ${{ secrets.GOOGLE_CLIENTSECRET }}
        emailHost: ${{ secrets.EMAILHOST }}
        emailUser: ${{ secrets.EMAILUSER }}
        emailPassword: ${{ secrets.EMAILPASSWORD }}
        emailPort: ${{ secrets.EMAILPORT }}
      run: |
          docker run -d --name weges-app -e "ConnectionStrings:weges=$connString" -e "GoogleClientId=$gClientId" -e "GoogleClientSecret=$gClientSecret" -e "EmailConfiguracoes=$emailUser" -e "EmailConfiguracoes:Name=WEGES" -e "EmailConfiguracoes:Host=$emailHost" -e "EmailConfiguracoes:UserName=$emailUser" -e "EmailConfiguracoes:Password=$emailPassword" --restart unless-stopped --network traefik-net -l "traefik.enable=true" -l "traefik.http.routers.wegesapp.tls=true" -l "traefik.http.routers.wegesweb.rule=Host($web_address)" -l "traefik.http.routers.wegesweb.tls.certresolver=letsencrypt" -l "traefik.http.routers.wegesweb.tls=true" ghcr.io/mmpmendes/weges-v2/weges-app:latest