name: weges-api-image

on:
  push:
    branches: [ "main" ]
    paths: [ "ApiService/**" ]
  pull_request:
    branches: [ "main" ]
    paths: [ "ApiService/**" ]

jobs:

  build:
    
    runs-on: home-runner
    permissions:
      contents: read
      packages: write
      actions: read
    env:
      VERSION: v1.0.0  # Define the VERSION here or dynamically in a step
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Set up Node.js (for versioning tool)
      uses: actions/setup-node@v4

    - name: Install Standard Version
      run: npm install -g standard-version
      
    - name: Determine New Version
      id: versioning
      run: |
        git config --global user.email "github-actions@github.com"
        git config --global user.name "GitHub Actions"

        # Run standard-version to generate the next version
        standard-version --dry-run | tee version-output.txt

        # Extract the version number
        VERSION=$(grep -oE "v[0-9]+\.[0-9]+\.[0-9]+" version-output.txt | head -1)

        if [ -z "$VERSION" ]; then
          VERSION="v1.0.0"
        fi

        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "New version: $VERSION"
        
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
    - name: Build the Docker image
      run: docker build -t ghcr.io/mmpmendes/weges-v2/weges-api:$VERSION -f ApiService/Dockerfile . 

    - name: Tag the Docker image
      run: docker tag ghcr.io/mmpmendes/weges-v2/weges-api:$VERSION ghcr.io/mmpmendes/weges-v2/weges-api:latest

      
    - name: Push Docker Image to Github
      run: |
        docker push ghcr.io/mmpmendes/weges-v2/weges-api:$VERSION
        docker push ghcr.io/mmpmendes/weges-v2/weges-api:latest
    
    - name: Remove running container
      run: |
        docker rm -f weges-api-service

    - name: Deploy WebApi
      env: # Or as an environment variable
        api_address: ${{ secrets.API_ADDRESS }}
        connString: ${{ secrets.CONNECTIONSTRING }}
      run: |
        docker run -d --name weges-api-service -e "ConnectionStrings:connectionString=$connString"  --restart unless-stopped --network traefik-net -l "traefik.enable=true" -l "traefik.http.routers.wegesapi.middlewares=corsheader@file" -l "traefik.http.routers.wegesapi.rule=Host($api_address)" -l "traefik.http.services.wegesapi.loadbalancer.server.port=8082" -l "traefik.http.routers.wegesapi.tls.certresolver=letsencrypt" -l "traefik.http.routers.wegesapi.tls=true" ghcr.io/mmpmendes/weges-v2/weges-api:latest   